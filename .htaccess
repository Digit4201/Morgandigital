# Configuration de sécurité Apache - Version Renforcée
# Morgan Digital Landing Page - Sécurité Maximale

# ========================================
# HEADERS DE SÉCURITÉ RENFORCÉS
# ========================================
<IfModule mod_headers.c>
    # Content Security Policy - Politique de sécurité du contenu RENFORCÉE
    # CORRECTION: Suppression de 'unsafe-inline' pour éviter les XSS
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com; style-src 'self' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: *.stripe.com; connect-src 'self' https://formspree.io https://api.stripe.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self' https://formspree.io; object-src 'none'; media-src 'none'; worker-src 'none'; child-src 'none'; frame-src https://checkout.stripe.com https://js.stripe.com;"
    
    # Protection contre le clickjacking
    Header always set X-Frame-Options "DENY"
    
    # Protection contre le détournement de type MIME
    Header always set X-Content-Type-Options "nosniff"
    
    # Protection XSS intégrée au navigateur (Dépréciée mais encore utile)
    Header always set X-XSS-Protection "1; mode=block"
    
    # Contrôle du referrer
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Permissions Policy renforcée
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(self), usb=(), magnetometer=(), accelerometer=(), gyroscope=(), autoplay=(self), fullscreen=(self), display-capture=()"
    
    # HSTS - Force HTTPS pendant 2 ans avec preload
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    
    # Empêche l'exécution de scripts inline non autorisés
    Header always set X-Permitted-Cross-Domain-Policies "none"
    
    # NOUVEAU: Cross-Origin-Opener-Policy
    Header always set Cross-Origin-Opener-Policy "same-origin"
    
    # NOUVEAU: Cross-Origin-Embedder-Policy
    Header always set Cross-Origin-Embedder-Policy "require-corp"
    
    # NOUVEAU: Cross-Origin-Resource-Policy
    Header always set Cross-Origin-Resource-Policy "same-origin"
    
    # Suppression des headers révélateurs d'information
    Header always unset Server
    Header always unset X-Powered-By
</IfModule>

# ========================================
# PROTECTION CONTRE LES ATTAQUES AVANCÉES
# ========================================
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Protection contre le hotlinking des images
    RewriteCond %{HTTP_REFERER} !^$
    RewriteCond %{HTTP_REFERER} !^https?://(.+\.)?morgandigital\.fr [NC]
    RewriteCond %{HTTP_REFERER} !^https?://(.+\.)?stripe\.com [NC]
    RewriteRule \.(jpe?g|png|gif|webp|svg)$ - [F]
    
    # NOUVEAU: Protection contre les attaques par force brute
    RewriteCond %{HTTP_USER_AGENT} ^$ [OR]
    RewriteCond %{HTTP_USER_AGENT} ^(.*)(nikto|sqlmap|fimap|nessus|openvas|nmap|masscan|zmap)(.*)$ [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # NOUVEAU: Blocage des user-agents malveillants
    RewriteCond %{HTTP_USER_AGENT} (libwww-perl|wget|python|nikto|curl|scan|java|winhttp|clshttp|loader) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} (%0A|%0D|%27|%3C|%3E|%00) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} (;|<|>|'|"|\)|\(|%0A|%0D|%22|%27|%28|%3C|%3E|%00).*(libwww-perl|wget|python|nikto|curl|scan|java|winhttp|HTTrack|clshttp|archiver|loader|email|harvest|extract|grab|miner) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # NOUVEAU: Protection contre l'injection SQL avancée
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http:// [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=https:// [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=(\.\.//?)+ [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ [NC,OR]
    RewriteCond %{QUERY_STRING} \=PHP[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12} [NC,OR]
    RewriteCond %{QUERY_STRING} (\.\./|\.\.) [OR]
    RewriteCond %{QUERY_STRING} ftp\: [NC,OR]
    RewriteCond %{QUERY_STRING} http\: [NC,OR]
    RewriteCond %{QUERY_STRING} https\: [NC,OR]
    RewriteCond %{QUERY_STRING} \=\|w\| [NC,OR]
    RewriteCond %{QUERY_STRING} ^(.*)/self/(.*)$ [NC,OR]
    RewriteCond %{QUERY_STRING} ^(.*)cPath=http://(.*)$ [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*embed.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^e]*e)+mbed.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*object.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^o]*o)+bject.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*iframe.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^i]*i)+frame.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} base64_encode.*\(.*\) [NC,OR]
    RewriteCond %{QUERY_STRING} base64_(en|de)code[^(]*\([^)]*\) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} ^.*(\[|\]|\(|\)|<|>|ê|"|;|\?|\*|=$).* [NC,OR]
    RewriteCond %{QUERY_STRING} (NULL|OUTFILE|LOAD_FILE) [OR]
    RewriteCond %{QUERY_STRING} (\.{1,}/)+(motd|etc|bin) [NC,OR]
    RewriteCond %{QUERY_STRING} (localhost|loopback|127\.0\.0\.1) [NC,OR]
    RewriteCond %{QUERY_STRING} (<|>|'|%0A|%0D|%27|%3C|%3E|%00) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # NOUVEAU: Protection contre les attaques par méthodes HTTP non autorisées
    RewriteCond %{REQUEST_METHOD} ^(HEAD|TRACE|DELETE|TRACK|DEBUG) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # NOUVEAU: Rate limiting basique (requiert mod_evasive)
    # À configurer selon les besoins: DOSHashTableSize, DOSPageCount, etc.
</IfModule>

# ========================================
# CONTRÔLE D'ACCÈS AUX FICHIERS SENSIBLES
# ========================================

# Désactiver l'affichage des répertoires
Options -Indexes -MultiViews

# Masquer les fichiers sensibles et de configuration
<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|sql|md|bak|conf|config|yml|yaml|json|env)$">
    Require all denied
</FilesMatch>

# NOUVEAU: Protection renforcée des fichiers de sauvegarde
<FilesMatch "(\.(bak|backup|old|orig|tmp|temp|cache|config|dist|fla|inc|ini|log|psd|sh|sql|swp|swo)|~|\.sw[op]|#.*#|\.#.*|%.*%|\.orig$|\.rej$)$">
    Require all denied
</FilesMatch>

# NOUVEAU: Blocage des fichiers sensibles par nom
<FilesMatch "^(readme|license|changelog|install|todo|config|database|db_config|settings).*$">
    Require all denied
</FilesMatch>

# NOUVEAU: Protection des répertoires système
<DirectoryMatch "^\.|\/\.">
    Require all denied
</DirectoryMatch>

# ========================================
# OPTIMISATION DES PERFORMANCES SÉCURISÉES
# ========================================

# Cache sécurisé des ressources statiques
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # NOUVEAU: Headers de cache sécurisés pour HTML
    ExpiresByType text/html "access plus 0 seconds"
</IfModule>

# Compression GZIP optimisée
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE image/svg+xml
    
    # Compression des polices
    AddOutputFilterByType DEFLATE application/font-woff
    AddOutputFilterByType DEFLATE application/font-woff2
    AddOutputFilterByType DEFLATE font/woff
    AddOutputFilterByType DEFLATE font/woff2
</IfModule>

# ========================================
# FORCE HTTPS AVEC SÉCURITÉ RENFORCÉE
# ========================================
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # NOUVEAU: Protection contre les attaques de downgrade HTTPS
    RewriteCond %{HTTP:X-Forwarded-Proto} !https
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # NOUVEAU: Protection contre Host Header Injection
    RewriteCond %{HTTP_HOST} !^morgandigital\.fr$ [NC]
    RewriteCond %{HTTP_HOST} !^www\.morgandigital\.fr$ [NC]
    RewriteRule ^(.*)$ https://www.morgandigital.fr/$1 [L,R=301]
</IfModule>

# ========================================
# LOGGING ET MONITORING SÉCURISÉ
# ========================================
<IfModule mod_log_config.c>
    # NOUVEAU: Log des tentatives d'attaque
    LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %D" security
    CustomLog logs/security.log security env=suspicious
    
    # Définition des variables d'environnement pour les requêtes suspectes
    SetEnvIf Request_URI "(\.php|\.asp|\.jsp|admin|wp-)" suspicious
    SetEnvIf Query_String "(union|select|insert|delete|script)" suspicious
    SetEnvIf User-Agent "(nikto|sqlmap|nmap|masscan)" suspicious
</IfModule>

# ========================================
# PROTECTION CSRF ET VALIDATION
# ========================================

# NOUVEAU: Headers spéciaux pour la validation CSRF
<IfModule mod_headers.c>
    # Ajouter un header personnalisé pour les requêtes AJAX
    Header always set X-CSRF-Protection "1"
    
    # NOUVEAU: Contrôle des méthodes HTTP autorisées
    <RequireAll>
        Require method GET POST HEAD OPTIONS
    </RequireAll>
</IfModule>

# ========================================
# CONFIGURATION MIME SÉCURISÉE
# ========================================
<IfModule mod_mime.c>
    # NOUVEAU: Configuration MIME sécurisée
    AddType text/html .html .htm
    AddType text/css .css
    AddType application/javascript .js
    AddType application/json .json
    AddType image/svg+xml .svg
    
    # Empêcher l'exécution de scripts dans les uploads
    AddType text/plain .php .php3 .phtml .pht .jsp .asp .aspx .pl .py .cgi
</IfModule>

# ========================================
# MESSAGES D'ERREUR SÉCURISÉS
# ========================================
# NOUVEAU: Pages d'erreur personnalisées pour éviter la divulgation d'information
ErrorDocument 400 "Bad Request"
ErrorDocument 401 "Unauthorized"
ErrorDocument 403 "Forbidden"
ErrorDocument 404 "Not Found"
ErrorDocument 500 "Internal Server Error"
ErrorDocument 502 "Bad Gateway"
ErrorDocument 503 "Service Unavailable"